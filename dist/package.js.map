{"version":3,"file":"package.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AAC0C;AACJ;AACA;AACb;AACuC;AACZ;AACpD;AACO,uBAAuB,mDAAS;AACvC;AACA,cAAc,gDAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iDAAO;AAC/B;AACA,qBAAqB,iBAAiB;AACtC,SAAS;AACT,0BAA0B,gDAAM;AAChC,sBAAsB,+CAAK;AAC3B,yBAAyB,iDAAO;AAChC,yBAAyB,+CAAK;AAC9B,wBAAwB,gDAAM;AAC9B;AACA;AACA;AACA,2BAA2B,iDAAO;AAClC,wBAAwB,oDAAU;AAClC,6BAA6B,oDAAU;AACvC,4BAA4B,yCAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,KAAK,4BAA4B,8BAA8B,GAAG,wBAAwB;AAC5G;AACA;AACA;AACA,+BAA+B,mDAAS;AACxC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,mDAAS,iBAAiB,wBAAwB,EAAE,IAAI;AACnG,qEAAqE,oDAAU;AAC/E;AACA;AACA;AACA,oBAAoB,oDAAU,gCAAgC,yCAAyC,EAAE,4BAA4B;AACrI;AACA;AACA;AACA;AACA,mCAAmC,mDAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mDAAS;AACzC,gBAAgB,oDAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mDAAS;AAC3B;AACA;AACA,kCAAkC,+CAAC,iCAAiC,yDAAyD;AAC7H;AACA,wDAAwD,yBAAyB;AACjF;AACA;AACA;AACA;AACA,sCAAsC,+CAAC,iCAAiC,yDAAyD;AACjI;AACA;AACA;AACA;AACA,iCAAiC,gDAAM;AACvC,oBAAoB,oDAAU;AAC9B,oBAAoB,sDAAY;AAChC;AACA;AACA;AACA,wBAAwB,+CAAC;AACzB,wBAAwB,+CAAC;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,+CAAC;AACtC;AACA,iCAAiC,iDAAO;AACxC,oBAAoB,oDAAU,UAAU,kBAAkB,MAAM,SAAS,mBAAmB;AAC5F,oBAAoB,iDAAO;AAC3B,wBAAwB,sDAAY;AACpC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,wBAAwB,mDAAS;AACjC;AACA;AACA;AACA,4BAA4B,+CAAC;AAC7B;AACA,yBAAyB;AACzB,yBAAyB,SAAS,sBAAsB;AACxD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iCAAiC,mDAAS;AAC1C;AACA;AACA;AACA,gBAAgB,oDAAU,mBAAmB,KAAK;AAClD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+CAAC;AACT,QAAQ,+CAAC;AACT;AACA;AACA;AACA;AACA,6BAA6B,oDAAU,UAAU,qBAAqB,KAAK,WAAW;AACtF;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,8BAA8B,mDAAS,CAAC,mDAAS;AACjD,yBAAyB,mDAAS,CAAC,mDAAS;AAC5C;AACA,YAAY,oDAAU;AACtB,SAAS;AACT;AACA;AACA;AACA,8BAA8B,iDAAO,4BAA4B,SAAS,wBAAwB;AAClG;AACA;AACA;AACA;AACA,mBAAmB,+CAAK;AACxB;AACA;AACA;AACA,sCAAsC,gDAAM,CAAC,iDAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,gDAAM,CAAC,iDAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gDAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mDAAS;AACjC;AACA;AACA;AACA,QAAQ,+CAAC;AACT,YAAY,+CAAC;AACb,YAAY,+CAAC;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAQ;AAC5B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,YAAY,kDAAQ;AACpB;AACA;AACA;AACA,oBAAoB,kDAAQ;AAC5B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAU;AACnC;AACA,wBAAwB,qDAAW;AACnC;AACA,mDAAmD,oDAAU;AAC7D,aAAa;AACb,mCAAmC,oDAAU;AAC7C,mCAAmC,oDAAU,OAAO;AACpD;AACA,mBAAmB;AACnB,4BAA4B,mDAAS;AACrC;AACA,yCAAyC,gDAAM;AAC/C,0BAA0B,iDAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+CAAC;AACb;AACA;AACA,YAAY,+CAAC;AACb,gBAAgB,+CAAC;AACjB,gBAAgB,+CAAC;AACjB,aAAa;AACb,YAAY,oDAAU;AACtB;AACA;AACA,+CAA+C,qBAAqB,KAAK,WAAW;AACpF,SAAS;AACT;AACA;AACA;AACA,QAAQ,+CAAC;AACT,aAAa,+CAAC,0BAA0B,+CAAC,8BAA8B,+CAAC;AACxE;AACA;AACA;AACA,8CAA8C,qDAAK;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oDAAU;AAC5B,YAAY,oDAAU;AACtB;AACA;AACA,oBAAoB;AACpB;AACA;AACA,sBAAsB,+CAAC;AACvB;AACA;AACA;AACA,eAAe,oDAAU,sBAAsB,oDAAU,qBAAqB,oDAAU;AACxF;AACA;AACA,+EAA+E,2CAA2C;AAC1H;AACA;AACA;AACA,qBAAqB,oDAAU;AAC/B,8FAA8F,YAAY;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,uBAAuB;AACrG;AACA;AACA,yBAAyB,oDAAU;AACnC;AACA,sCAAsC,KAAK,GAAG,qDAAW,oBAAoB,sDAAM;AACnF;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,4CAAU;AAC1D;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,yFAAyF,QAAQ,cAAc,+CAAC,mHAAmH;AACnO;AACA;AACA;AACA,2BAA2B,+CAAS,sBAAsB,mDAAG,sBAAsB,sDAAM;AACzF;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+CAAC;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,2BAA2B,+CAAS;AACpC;AACA;AACA,4BAA4B,mDAAG,uBAAuB,sDAAM;AAC5D,SAAS;AACT;AACA;AACA;AACA;AACA,qFAAqF,QAAQ,wIAAwI;AACrO;AACA;AACA,2BAA2B,8CAAQ,sBAAsB,mDAAG,UAAU,QAAQ,gHAAgH,GAAG,sDAAM;AACvM;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+CAAS;AACpC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oDAAU;AACtC;AACA;AACA;AACA;AACA,gBAAgB,qDAAW,kBAAkB,sDAAM;AACnD;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK,oDAAU;AAChC;AACA,gBAAgB,qDAAW,2BAA2B,sDAAM,QAAQ,oDAAU;AAC9E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,4CAA4C,qDAAW,oBAAoB,sDAAM;AACjF;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,8BAA8B,+CAAC;AAC/B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,4BAA4B,qDAAW;AACvC,+DAA+D,sDAAM,cAAc,iDAAO,yDAAyD,qDAAK;AACxJ;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrjBD;AACF;AAC8B;AAG/D,MAAM,kBAAmB,SAAQ,gFAAQ;IAAhD;;QAaE,YAAO,GAAW,iEAAiE,CAAC;IA4CtF,CAAC;IAxDC,IAAI,IAAI;QACN,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,IAAI,WAAW;QACb,OAAO,oEAAoE,CAAC;IAC9E,CAAC;IAED,IAAI,KAAK;QACP,OAAO,CAAC,CAAC;IACX,CAAC;IAIe,IAAI;;YAClB,IAAI,CAAC,QAAQ,CAAC,kFAAkF,CAAC,CAAC;YAClG,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;YACpC,MAAM,IAAI,GAAG,oDAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAE,CAAC,IAAI,CAAC,CAAC;YAChD,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAEvB,SAAS;YAET,MAAM,qBAAqB,GAAG,QAAQ,CAAC,aAAa,CAAC,wBAAwB,CAAgB,CAAC;YAC9F,MAAM,eAAe,GAAG,wCAAwC,CAAC;YACjE,MAAM,cAAc,GAAG,yFAAyF,CAAC;YAEjH,MAAM,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,cAAc,CAAC,qBAAqB,CAAC,EAAE,IAAI,EAAE,cAAc,CAAC,CAAC;YAEhG,SAAS;YACT,MAAM,iBAAiB,GAAG,QAAQ,CAAC,aAAa,CAAC,uDAAuD,CAAgB,CAAC;YACzH,MAAM,kBAAkB,GAAG,8DAA8D,CAAC;YAC1F,MAAM,iBAAiB,GAAG,gFAAgF;gBACxG,wEAAwE;gBACxE,gEAAgE,CAAC;YAEnE,MAAM,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,sDAAM,CAAC,GAAG,EAAE,CACjF,IAAI,CAAC,CAAE,CAAC,UAAU,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;YAE7E,SAAS;YACT,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,gCAAgC,CAAgB,CAAC;YACzF,MAAM,sBAAsB,GAAG,yDAAyD,CAAC;YACzF,MAAM,qBAAqB,GAAG,qEAAqE;gBACjG,wFAAwF,CAAC;YAE3F,MAAM,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE,cAAc,CAAC,QAAQ,CAAC,EAAE,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;YAE9G,yEAAyE;YACzE,SAAS,cAAc,CAAC,OAAoB;gBAC1C,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,EAAE;oBACnC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;wBACrC,OAAO,EAAE,CAAC;oBACZ,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACL,CAAC;QAEH,CAAC;KAAA;CACF;;;;;;;;;;;AC9DD;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;ACNA,yFAAyF;AAC/C;AAEJ;AACoB;AAEnD,MAAM,QAAQ,GAAG,IAAI,oDAAU,EAAE,CAAC;AAEzC,YAAY;AACL,SAAS,IAAI;IAClB,oDAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AACpC,CAAC;AAED,gBAAgB;AAChB,gCAAgC;AAChC,wBAAwB;AACxB,0FAA0F;AAC1F,gBAAgB;AACT,SAAS,gBAAgB;IAC9B,OAAO,IAAI,qEAAkB,EAAE,CAAC;AAClC,CAAC","sources":["webpack://sparklines_tutorial/./node_modules/@datagrok-libraries/tutorials/src/tutorial.js","webpack://sparklines_tutorial/./src/tutorials/sparklines.ts","webpack://sparklines_tutorial/external var \"$\"","webpack://sparklines_tutorial/external var \"DG\"","webpack://sparklines_tutorial/external var \"grok\"","webpack://sparklines_tutorial/external var \"rxjs\"","webpack://sparklines_tutorial/external var \"rxjs.operators\"","webpack://sparklines_tutorial/external var \"ui\"","webpack://sparklines_tutorial/webpack/bootstrap","webpack://sparklines_tutorial/webpack/runtime/compat get default export","webpack://sparklines_tutorial/webpack/runtime/define property getters","webpack://sparklines_tutorial/webpack/runtime/hasOwnProperty shorthand","webpack://sparklines_tutorial/webpack/runtime/make namespace object","webpack://sparklines_tutorial/./src/package.ts"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as grok from 'datagrok-api/grok';\nimport * as ui from 'datagrok-api/ui';\nimport * as DG from 'datagrok-api/dg';\nimport $ from 'cash-dom';\nimport { fromEvent, interval, Observable, Subject } from 'rxjs';\nimport { filter, first, map } from 'rxjs/operators';\n/** A base class for tutorials */\nexport class Tutorial extends DG.Widget {\n    constructor() {\n        super(ui.div([], 'tutorials-track'));\n        this.track = null;\n        this.prerequisites = {};\n        this.demoTable = 'demog.csv';\n        // manualMode: boolean = false;\n        this._t = null;\n        this.imageUrl = '';\n        this.nextLink = ui.link('next', '', 'Go to the next tutorial', {\n            classes: 'grok-tutorial-next',\n            style: { display: 'none' },\n        });\n        this.mainHeader = ui.div([], 'tutorials-main-header');\n        this.header = ui.h1('');\n        this.headerDiv = ui.divH([], 'tutorials-root-header');\n        this.subheader = ui.h3('');\n        this.activity = ui.div([], 'tutorials-root-description');\n        this.status = false;\n        this.closed = false;\n        this.activeHints = [];\n        this.progressDiv = ui.divV([], 'tutorials-root-progress');\n        this.progress = ui.element('progress');\n        this.progressSteps = ui.divText('');\n        this._onClose = new Subject();\n        this.updateStatus();\n        this.progress.max = 0;\n        this.progress.value = 1;\n        this.mainHeader.append(this.headerDiv, this.progressDiv);\n        this.root.append(this.mainHeader);\n        this.root.append(this.subheader);\n        this.root.append(this.activity);\n        this.root.append(this.nextLink);\n    }\n    get t() {\n        return this._t;\n    }\n    set t(df) {\n        this._t = df;\n    }\n    get url() {\n        const removeSpaces = (s) => s.split(' ').join('');\n        const root = window.location.origin;\n        return `${root}/apps/tutorials/Tutorials/${removeSpaces(this.track.name)}/${removeSpaces(this.name)}`;\n    }\n    updateStatus() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const info = yield grok.dapi.userDataStorage.getValue(Tutorial.DATA_STORAGE_KEY, this.name);\n            this.status = !!info;\n        });\n    }\n    run() {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            this._addHeader();\n            const tutorials = (_a = this.track) === null || _a === void 0 ? void 0 : _a.tutorials;\n            if (!tutorials) {\n                console.error('The launched tutorial is not bound to any track.');\n                return;\n            }\n            if (this.prerequisites.packages && Array.isArray(this.prerequisites.packages) &&\n                this.prerequisites.packages.length > 0) {\n                const missingPackages = [];\n                for (const p of this.prerequisites.packages) {\n                    const packages = yield grok.dapi.packages.list({ filter: `shortName = \"${p}\"` });\n                    if (!packages.length || !(packages[0] instanceof DG.Package))\n                        missingPackages.push(p);\n                }\n                if (missingPackages.length) {\n                    grok.shell.error(`Please install package${missingPackages.length === 1 ? '' : 's'} ${missingPackages.join(', ')} to start the tutorial`);\n                    this.close();\n                    return;\n                }\n            }\n            const services = yield grok.dapi.admin.getServiceInfos();\n            for (const [service, flag] of Object.entries(this.prerequisites)) {\n                if (service in Tutorial.SERVICES && flag === true) {\n                    const serviceAvailable = yield this.checkService(Tutorial.SERVICES[service], services);\n                    if (!serviceAvailable)\n                        return;\n                }\n            }\n            const id = tutorials.indexOf(this);\n            if (this.demoTable) {\n                this._t = yield grok.data.getDemoTable(this.demoTable);\n                grok.shell.addTableView(this._t);\n            }\n            this.closed = false;\n            yield this._run();\n            this.endSection();\n            this.title('Congratulations!');\n            this.describe('You have successfully completed this tutorial.');\n            yield grok.dapi.userDataStorage.postValue(Tutorial.DATA_STORAGE_KEY, this.name, new Date().toUTCString());\n            const statusMap = yield ((_b = this.track) === null || _b === void 0 ? void 0 : _b.updateStatus());\n            function updateProgress(track) {\n                const trackRoot = $(`.tutorials-track[data-name ='${track === null || track === void 0 ? void 0 : track.name}']`);\n                trackRoot\n                    .find(`.tutorials-card[data-name='${track.tutorials[id].name}']`)\n                    .children('.tutorials-card-status').show();\n                trackRoot\n                    .find('progress')\n                    .prop('value', (100 / track.tutorials.length * (track.completed)).toFixed());\n                const progressNodes = $(`.tutorials-track[data-name ='${track === null || track === void 0 ? void 0 : track.name}'] > .tutorials-track-details`).children();\n                progressNodes.first().text(trackRoot.find('progress').prop('value') + '% complete');\n                progressNodes.last().text(String(track.completed + ' / ' + track.tutorials.length));\n            }\n            if (statusMap && Object.values(statusMap).every((v) => v)) {\n                this.root.append(ui.div([\n                    ui.divText(((_c = this.track) === null || _c === void 0 ? void 0 : _c.name) + 'is complete!'),\n                    ui.bigButton('Complete', () => {\n                        updateProgress(this.track);\n                        this._closeAll();\n                        this.clearRoot();\n                        $('.tutorial').show();\n                        $('#tutorial-child-node').html('');\n                    }),\n                ]));\n            }\n            else if (statusMap) {\n                // Find the first uncompleted tutorial in the track. Give preference to the first tutorial\n                // after the current one, if there are uncompleted tutorials both before and after it.\n                let nextId = null;\n                for (const [tutorialId, completed] of Object.entries(statusMap)) {\n                    const numId = +tutorialId;\n                    if (!completed) {\n                        if (nextId === null)\n                            nextId = numId;\n                        else {\n                            if (nextId < id && id < numId) {\n                                nextId = numId;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (nextId === null) {\n                    console.error('Corrupted status map.');\n                    nextId = id + 1;\n                }\n                const tutorialNode = $('#tutorial-child-node');\n                const nextTutorial = tutorials[nextId];\n                this.root.append(ui.divV([\n                    ui.divText(`Next \"${nextTutorial.name}\"`, { style: { margin: '5px 0' } }),\n                    ui.divH([\n                        ui.bigButton('Start', () => {\n                            updateProgress(this.track);\n                            this.clearRoot();\n                            tutorialNode.html('');\n                            tutorialNode.append(nextTutorial.root);\n                            nextTutorial.run();\n                        }),\n                        ui.button('Cancel', () => {\n                            updateProgress(this.track);\n                            this._closeAll();\n                            this.clearRoot();\n                            $('.tutorial').show();\n                            tutorialNode.html('');\n                        }),\n                    ], { style: { marginLeft: '-4px' } }),\n                ]));\n            }\n        });\n    }\n    checkService(name, services) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!services)\n                services = yield grok.dapi.admin.getServiceInfos();\n            const service = services.find((si) => si.name === name);\n            const serviceAvailable = service == null ? false : service.enabled && service.status === 'Running';\n            if (!serviceAvailable) {\n                grok.shell.error(`Service \"${name}\" not available. Please try running this tutorial later`);\n                this.close();\n            }\n            return serviceAvailable;\n        });\n    }\n    close() {\n        this.clearRoot();\n        this.closed = true;\n        this.onClose.next();\n        this._closeAll();\n        $('.tutorial').show();\n        $('#tutorial-child-node').html('');\n    }\n    _addHeader() {\n        this.progressDiv.append(this.progress);\n        this.progress.max = this.steps;\n        this.progressSteps = ui.divText(`Step: ${this.progress.value} of ${this.steps}`);\n        this.progressDiv.append(this.progressSteps);\n        // const manualMode = ui.button(ui.iconFA('forward'), () => {\n        //   this.manualMode = !this.manualMode;\n        //   $(manualMode.firstChild).toggleClass('fal fas');\n        // }, 'Self-paced mode');\n        // if (this.manualMode)\n        //   $(manualMode.firstChild).toggleClass('fal fas');\n        const closeTutorial = ui.button(ui.iconFA('times-circle'), () => this.close());\n        const linkIcon = ui.button(ui.iconFA('link'), () => {\n            navigator.clipboard.writeText(this.url);\n            grok.shell.info('Link copied to clipboard');\n        }, `Copy the tutorial link`);\n        // manualMode.style.minWidth = '30px';\n        closeTutorial.style.minWidth = '30px';\n        this.header.textContent = this.name;\n        this.headerDiv.append(ui.divH([this.header, linkIcon], { style: { alignItems: 'center' } }));\n        // this.headerDiv.append(ui.div([manualMode, closeTutorial]));\n        this.headerDiv.append(closeTutorial);\n    }\n    title(text, startSection = false) {\n        const h3 = ui.h3(text);\n        if (this.currentSection) {\n            if (startSection) {\n                this.endSection();\n                this.currentSection = ui.div(ui.divH([h3], 'tutorials-section-header'));\n                this.activity.append(this.currentSection);\n            }\n            else\n                this.currentSection.append(h3);\n        }\n        else if (startSection) {\n            this.currentSection = ui.div(ui.divH([h3], 'tutorials-section-header'));\n            this.activity.append(this.currentSection);\n        }\n        else\n            this.activity.append(h3);\n    }\n    describe(text) {\n        const div = ui.div();\n        div.innerHTML = text;\n        if (this.currentSection)\n            this.currentSection.append(div);\n        else\n            this.activity.append(div);\n        div.scrollIntoView();\n    }\n    endSection() {\n        if (!this.currentSection)\n            return;\n        this.currentSection.classList.add('tutorials-done-section');\n        const chevron = ui.iconFA('chevron-left');\n        chevron.classList.add('tutorials-chevron');\n        const s = this.currentSection;\n        s.children[0].append(chevron);\n        $(chevron).on('click', () => {\n            $(chevron).toggleClass('tutorials-chevron-expanded');\n            $(s).toggleClass('tutorials-done-section tutorials-done-section-expanded');\n        });\n        this.currentSection = undefined;\n    }\n    _placeHints(hint) {\n        if (hint instanceof HTMLElement) {\n            this.activeHints.push(hint);\n            ui.hints.addHintIndicator(hint, false);\n        }\n        else if (Array.isArray(hint)) {\n            this.activeHints.push(...hint);\n            hint.forEach((h) => {\n                if (h != null)\n                    ui.hints.addHintIndicator(h, false);\n            });\n        }\n    }\n    _setHintVisibility(hints, visibility) {\n        hints.forEach((hint) => {\n            if (hint != null)\n                hint.style.visibility = visibility ? 'visible' : 'hidden';\n        });\n    }\n    _removeHints(hint) {\n        if (hint instanceof HTMLElement)\n            ui.hints.remove(hint);\n        else if (Array.isArray(hint)) {\n            hint.forEach((h) => {\n                if (h != null)\n                    ui.hints.remove(h);\n            });\n        }\n    }\n    action(instructions, completed, hint = null, description = '') {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.closed)\n                return;\n            this.activeHints.length = 0;\n            if (hint != null)\n                this._placeHints(hint);\n            const view = grok.shell.v;\n            const hints = Array.from(document.getElementsByClassName('ui-hint-blob'));\n            const sub = grok.events.onCurrentViewChanged.subscribe(() => {\n                if (hint)\n                    this._setHintVisibility(hints, grok.shell.v === view);\n            });\n            const instructionDiv = ui.divText(instructions, 'grok-tutorial-entry-instruction');\n            const descriptionDiv = ui.divText('', { classes: 'grok-tutorial-step-description', style: {\n                    margin: '0px 0px 0px 15px',\n                } });\n            const chevron = ui.iconFA('chevron-left');\n            chevron.classList.add('tutorials-chevron');\n            const instructionIndicator = ui.div([], 'grok-tutorial-entry-indicator');\n            const entry = ui.divH([\n                instructionIndicator,\n                instructionDiv,\n            ], 'grok-tutorial-entry');\n            descriptionDiv.innerHTML = description;\n            if (this.currentSection) {\n                this.currentSection.append(entry);\n                this.currentSection.append(descriptionDiv);\n            }\n            else {\n                this.activity.append(entry);\n                this.activity.append(descriptionDiv);\n            }\n            descriptionDiv.scrollIntoView();\n            const currentStep = completed instanceof Promise ? completed : this.firstEvent(completed);\n            yield currentStep;\n            instructionDiv.classList.add('grok-tutorial-entry-success');\n            instructionIndicator.classList.add('grok-tutorial-entry-indicator-success');\n            if (hint != null)\n                this._removeHints(hint);\n            sub.unsubscribe();\n            // if (this.manualMode && manual !== false) {\n            //   const nextStepIcon = ui.iconFA('forward', undefined, 'Next step');\n            //   nextStepIcon.className = 'grok-icon fas fa-forward tutorials-next-step';\n            //   entry.append(nextStepIcon);\n            //   await this.firstEvent(fromEvent(nextStepIcon, 'click'));\n            //   nextStepIcon.remove();\n            // }\n            $(descriptionDiv).hide();\n            if (description.length != 0)\n                entry.append(chevron);\n            $(chevron).on('click', () => {\n                $(chevron).toggleClass('tutorials-chevron-expanded');\n                $(descriptionDiv).toggle();\n            });\n            ui.tooltip.bind(entry, description);\n            this.progress.value++;\n            this.progressSteps.innerHTML = '';\n            this.progressSteps.append(`Step: ${this.progress.value} of ${this.steps}`);\n        });\n    }\n    clearRoot() {\n        this.progress.value = 1;\n        $(this.root).children().each((idx, el) => el.classList.contains('tutorials-main-header') ?\n            ($(this.headerDiv).empty(), $(this.progressDiv).empty()) : $(el).empty());\n    }\n    firstEvent(eventStream) {\n        return new Promise((resolve, reject) => {\n            const eventSub = eventStream.pipe(first()).subscribe((_) => resolve());\n            const closeSub = this.onClose.subscribe(() => {\n                eventSub.unsubscribe();\n                closeSub.unsubscribe();\n                this._removeHints(this.activeHints);\n                // eslint-disable-next-line\n                reject();\n            });\n        }).catch((_) => console.log('Closing tutorial', this.name));\n    }\n    /** Closes all visual components that were added when working on tutorial, e.g., table views. */\n    _closeAll() {\n        var _a, _b;\n        // TODO: Take into account dialogs and other views\n        if ((_a = this.t) === null || _a === void 0 ? void 0 : _a.name) {\n            (_b = grok.shell.tableView(this.t.name)) === null || _b === void 0 ? void 0 : _b.close();\n            grok.shell.closeTable(this.t);\n        }\n    }\n    get onClose() { return this._onClose; }\n    getElement(element, selector, filter = null) {\n        var _a;\n        const nodes = $(element).find(selector);\n        return (_a = (filter ? nodes.filter(filter) : nodes)[0]) !== null && _a !== void 0 ? _a : null;\n    }\n    get menuRoot() {\n        return grok.shell.windows.simpleMode ? grok.shell.v.ribbonMenu.root : grok.shell.topMenu.root;\n    }\n    getMenuItem(name, horizontalMenu) {\n        return this.getElement(this.menuRoot, `div.d4-menu-item.d4-menu-group${horizontalMenu ? '.d4-menu-item-horz' : ''}`, (idx, el) => Array.from(el.children).some((c) => c.textContent === name));\n    }\n    getSidebarHints(paneName, commandName) {\n        var _a;\n        const pane = grok.shell.sidebar.getPane(paneName);\n        const command = (_a = this.getElement(pane.content, `div.d4-toggle-button[data-view=${commandName}]`)) !== null && _a !== void 0 ? _a : this.getElement(pane.content, 'div.d4-toggle-button', (idx, el) => el.textContent === commandName);\n        return [pane.header, command];\n    }\n    /** Prompts the user to open a viewer of the specified type and returns it. */\n    openPlot(name, check, description = '') {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Expand toolbox / accordion API coverage\n            const getViewerIcon = (el) => {\n                const selector = name == 'filters' ? 'i.fa-filter' : `i.svg-${name.replace(' ', '-')}`;\n                return this.getElement(el, selector);\n            };\n            const view = grok.shell.v;\n            let viewer;\n            yield this.action(`Open ${name}`, grok.events.onViewerAdded.pipe(filter((data) => {\n                const found = check(data.args.viewer);\n                if (found)\n                    viewer = data.args.viewer;\n                return found;\n            })), view.type === 'TableView' ? getViewerIcon(view.toolboxPage.accordion.root) : null, description);\n            return viewer;\n        });\n    }\n    /** Prompts the user to put the specified value into a dialog input. */\n    dlgInputAction(dlg, instructions, caption, value, description = '', historyHint = false, count = 0) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const inp = dlg.inputs.filter((input) => input.caption == caption)[count];\n            if (inp == null)\n                return;\n            yield this.action(instructions, new Observable((subscriber) => {\n                if (inp.stringValue === value)\n                    subscriber.next(inp.stringValue);\n                inp.onChanged(() => {\n                    if (inp.stringValue === value)\n                        subscriber.next(inp.stringValue);\n                });\n            }), historyHint ? this.getElement(dlg.root, 'i.fa-history.d4-command-bar-icon') : inp.root, description);\n        });\n    }\n    /** A helper method to access text inputs in a view. */\n    textInpAction(root, instructions, caption, value, description = '') {\n        return __awaiter(this, void 0, void 0, function* () {\n            const inputRoot = this.getElement(root, 'div.ui-input-root', (idx, inp) => { var _a; return ((_a = $(inp).find('label.ui-label.ui-input-label')[0]) === null || _a === void 0 ? void 0 : _a.textContent) === caption; });\n            if (inputRoot == null)\n                return;\n            const input = this.getElement(inputRoot, 'input.ui-input-editor');\n            const source = fromEvent(input, 'input').pipe(map((_) => input.value), filter((val) => val === value));\n            yield this.action(instructions, source, inputRoot, description);\n        });\n    }\n    /** A helper method to access choice inputs in a view. */\n    choiceInputAction(root, instructions, caption, value, description = '') {\n        return __awaiter(this, void 0, void 0, function* () {\n            let inputRoot = null;\n            let select;\n            $(root).find('.ui-input-root .ui-input-label span').each((idx, el) => {\n                var _a;\n                if (el.innerText === caption) {\n                    inputRoot = (_a = el.parentElement) === null || _a === void 0 ? void 0 : _a.parentElement;\n                    if (inputRoot)\n                        select = this.getElement(inputRoot, 'select');\n                }\n            });\n            if (select == null)\n                return;\n            const source = fromEvent(select, 'change');\n            yield this.action(instructions, select.value === value ?\n                new Promise((resolve) => resolve()) :\n                source.pipe(map((_) => select.value), filter((v) => v === value)), inputRoot, description);\n        });\n    }\n    ;\n    prepareColumnInpAction(root, instructions, caption, columnName, description, inputSelector, valueSelector, intervalPeriod = 1000) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const columnInput = this.getElement(root, inputSelector, (idx, inp) => { var _a; return ((_a = this.getElement(inp, 'label.ui-label.ui-input-label')) === null || _a === void 0 ? void 0 : _a.textContent) === caption; });\n            if (columnInput == null)\n                return;\n            const source = interval(intervalPeriod).pipe(map((_) => { var _a; return (_a = this.getElement(columnInput, valueSelector)) === null || _a === void 0 ? void 0 : _a.textContent; }), filter((value) => value === columnName));\n            return this.action(instructions, source, columnInput, description);\n        });\n    }\n    /** Prompts the user to choose a particular column in a column input with the specified caption. */\n    columnInpAction(root, instructions, caption, columnName, description = '') {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.prepareColumnInpAction(root, instructions, caption, columnName, description, 'div.ui-input-root.ui-input-column', 'div.d4-column-selector-column');\n        });\n    }\n    ;\n    /** Prompts the user to choose particular columns in a column input with the specified caption.\n     * Column names should be given in the following format: `(3) AGE, HEIGHT, WEIGHT`. */\n    columnsInpAction(root, instructions, caption, columnNames, description = '') {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.prepareColumnInpAction(root, instructions, caption, columnNames, description, 'div.ui-input-root.ui-input-columns', 'div.ui-input-editor > div.ui-input-column-names');\n        });\n    }\n    ;\n    buttonClickAction(root, instructions, caption, description = '') {\n        return __awaiter(this, void 0, void 0, function* () {\n            const btn = this.getElement(root, 'button.ui-btn', (idx, btn) => btn.textContent === caption);\n            if (btn == null)\n                return;\n            const source = fromEvent(btn, 'click');\n            yield this.action(instructions, source, btn, description);\n        });\n    }\n    ;\n    /** Prompts the user to open a view of the specified type, waits for it to open and returns it. */\n    openViewByType(instructions, type, hint = null, description = '') {\n        return __awaiter(this, void 0, void 0, function* () {\n            let view;\n            // If the view was opened earlier, we find it and wait until it becomes current.\n            for (const v of grok.shell.views) {\n                if (v.type === type)\n                    view = v;\n            }\n            yield this.action(instructions, view == null ?\n                grok.events.onViewAdded.pipe(filter((v) => {\n                    if (v.type === type) {\n                        view = v;\n                        return true;\n                    }\n                    return false;\n                })) : grok.shell.v.type === view.type ?\n                new Promise((resolve, _) => resolve()) :\n                grok.events.onCurrentViewChanged.pipe(filter((_) => grok.shell.v.type === view.type)), hint, description);\n            return view;\n        });\n    }\n    /** Prompts the user to open a dialog with the specified title, waits for it to open and returns it. */\n    openDialog(instructions, title, hint = null, description = '') {\n        return __awaiter(this, void 0, void 0, function* () {\n            let dialog;\n            yield this.action(instructions, grok.events.onDialogShown.pipe(filter((dlg) => {\n                if (dlg.title === title) {\n                    dialog = dlg;\n                    return true;\n                }\n                return false;\n            })), hint, description);\n            return dialog;\n        });\n    }\n    /** Prompts the user to open the \"Add New Column\" dialog, waits for it to open and returns it. */\n    openAddNCDialog(instructions = 'Open the \"Add New Column\" dialog', description = '') {\n        return __awaiter(this, void 0, void 0, function* () {\n            const addNCIcon = $('div.d4-ribbon-item').has('i.svg-add-new-column')[0];\n            return yield this.openDialog(instructions, 'Add New Column', addNCIcon, description);\n        });\n    }\n    /** Prompts the user to select a menu item in the context menu. */\n    contextMenuAction(instructions, label, hint = null, description = '') {\n        return __awaiter(this, void 0, void 0, function* () {\n            const commandClick = new Promise((resolve, reject) => {\n                const sub = grok.events.onContextMenu.subscribe((data) => {\n                    data.args.menu.onContextMenuItemClick.pipe(filter((mi) => (new DG.Menu(mi)).toString().toLowerCase() === label.toLowerCase()), first()).subscribe((_) => {\n                        sub.unsubscribe();\n                        resolve();\n                    });\n                });\n            });\n            yield this.action(instructions, commandClick, hint, description);\n        });\n    }\n}\nTutorial.DATA_STORAGE_KEY = 'tutorials';\nTutorial.SERVICES = {\n    'jupyter': 'Jupyter',\n    'grokCompute': 'GrokCompute',\n    'grokConnect': 'Grok Connect',\n    'h2o': 'H2O',\n};\n//# sourceMappingURL=data:application/json;base64,","import * as grok from 'datagrok-api/grok';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Tutorial } from '@datagrok-libraries/tutorials/src/tutorial';\r\n\r\n\r\nexport class SparklinesTutorial extends Tutorial {\r\n  get name(): string {\r\n    return 'Sparklines';\r\n  }\r\n\r\n  get description(): string {\r\n    return 'Learn how to use charts to visualize numerical values within a row';\r\n  }\r\n\r\n  get steps(): number {\r\n    return 3;\r\n  }\r\n\r\n  helpUrl: string = 'https://datagrok.ai/help/visualize/viewers/grid#summary-columns';\r\n\r\n  protected async _run(): Promise<void> {\r\n    this.describe('In this tutorial, we will learn how to add a column with sparklines in the grid.');\r\n    this.header.textContent = this.name;\r\n    const view = grok.shell.tableView(this.t!.name);\r\n    const grid = view.grid;\r\n\r\n    // Step 1\r\n    \r\n    const sparklinesMenuElement = document.querySelector('[d4-name=\"Sparklines\"]') as HTMLElement;\r\n    const instructionsAdd = 'Add the Sparklines column to the table';\r\n    const descriptionAdd = 'Right click any cell and select <b>Add</b> > <b>Summary Columns</b> > <b>Sparklines</b>';\r\n\r\n    await this.action(instructionsAdd, onClickPromise(sparklinesMenuElement), null, descriptionAdd);\r\n \r\n    // Step 2\r\n    const burgerMenuElement = document.querySelector('div[column_name=\"\"] > i.grok-icon.grok-font-icon-menu') as HTMLElement;\r\n    const inscructionsRename = 'Now, let\\'s give the <b>sparklines</b> column a better name.';\r\n    const descriptionRename = '&#8226; Hover over the column\\'s header and click the <b>Hamburger</b> icon.\\n' +\r\n      '&#8226; Under <b>Actions</b>, select <b>Rename…</b>  A dialog opens.\\n' +\r\n      '&#8226; In the dialog, enter <b>“H/W”</b> and click <b>OK</b>.';\r\n\r\n    await this.action(inscructionsRename, this.t!.onColumnNameChanged.pipe(filter(() =>\r\n      this.t!.currentCol.name === 'H/W')), burgerMenuElement, descriptionRename);\r\n\r\n    // Step 3\r\n    const okButton = document.querySelector('.d4-dialogue-footer .ui-btn-ok') as HTMLElement;\r\n    const instructionsChangeCols = 'Now, let\\'s change the columns selected for sparklines.';\r\n    const descriptionChangeCols = '&#8226; On the column\\'s header, click the <b>Hamburger</b> icon.\\n' +\r\n      '&#8226; Next to <b>Columns</b>, click the dropdown and deselect the <b>AGE</b> column.';\r\n\r\n    await this.action(instructionsChangeCols, onClickPromise(okButton), burgerMenuElement, descriptionChangeCols);\r\n\r\n    // Function to create a Promise that resolves when the element is clicked\r\n    function onClickPromise(element: HTMLElement) {\r\n      return new Promise<void>((resolve) => {\r\n        element.addEventListener('click', () => {\r\n          resolve();\r\n        });\r\n      });\r\n    }\r\n   \r\n  }\r\n}\r\n","module.exports = $;","module.exports = DG;","module.exports = grok;","module.exports = rxjs;","module.exports = rxjs.operators;","module.exports = ui;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* Do not change these import lines to match external modules in webpack configuration */\nimport * as grok from 'datagrok-api/grok';\nimport * as ui from 'datagrok-api/ui';\nimport * as DG from 'datagrok-api/dg';\nimport {SparklinesTutorial} from \"./tutorials/sparklines\";\n\nexport const _package = new DG.Package();\n\n//name: info\nexport function info() {\n  grok.shell.info(_package.webRoot);\n}\n\n//tags: tutorial\n//meta.name: Sparklines Tutorial\n//meta.track: Test Track\n//description: This tutorial teaches users how to add a column with sparklines in the grid\n//output: object\nexport function registerTutorial() {\n  return new SparklinesTutorial();\n}"],"names":[],"sourceRoot":""}